package objects {		import flash.display.MovieClip;	import flash.events.Event;	import flash.geom.Point;	import objects.Floor;	import objects.ScrollBar;		public class MoveBox extends MovieClip {		public var forcebar:ScrollBar;		//private var location:Point = new Point();		public var moveAble:Boolean;		public var outStage:Boolean;		//private var floorType:int;				private var weight:Number;		private var maxWeight:Number = 50;		private var minWeight:Number = 5;		private var force:Number;		private var frictionStatic:Number;		private var frictionMove:Number;		private var frictionScale:int = 10;		private var acceleration:Number;				public function MoveBox() {			init();		}				public function init() {			//floorType = 0;			force = 0;			weight = 25;			/*frictionMove = (Floor.IRONMOVE)*frictionScale;			frictionStatic = (Floor.IRONSTATIC)*frictionScale;			*/			frictionMove = (Floor.IRONMOVE)*weight;			frictionStatic = (Floor.IRONSTATIC)*weight;		}				public function reset(){			this.x = 170;			this.y = 485;		}				public function movement():void {			if (moveAble)			{				this.forcebar.visible = false;				this.x += acceleration;				this.gotoAndStop(2);								if (this.x > 1200)				{					moveAble = false;					outStage = true;				}			}			else {				this.gotoAndStop(1);				this.forcebar.visible = true;			}		}				public function weightUp():void {			if( weight < maxWeight)				weight += 5;		}				public function weightDown():void {			if( weight > minWeight)				weight -= 5;		}				public function getWeight():int {			return weight;		}				public function enableMove():void {			this.moveAble = true;			this.force = this.forcebar.getForceNum();			this.setAcceleration();			trace(this.forcebar.getForceNum());			trace("acceleration:"+this.acceleration+"force:"+this.force);		}				public function disableMove():void {			this.moveAble = false;			//this.acceleration = 0;			trace(this.forcebar.getForceNum());			trace("acceleration:"+this.acceleration+"force:"+this.force);		}				public function setFloorType(type:int):void {			switch (type) 			{				case 1:					setFrictions(Floor.IRONMOVE, Floor.IRONSTATIC);				break;				case 2:					setFrictions(Floor.WOODMOVE, Floor.WOODSTATIC);				break;				case 3:					setFrictions(Floor.SANDMOVE, Floor.SANDSTATIC);				break;			}		}				public function setFrictions(m:Number, s:Number):void {			/*frictionMove = m * frictionScale;			frictionStatic = s * frictionScale;			*/			frictionMove = m * weight;			frictionStatic = s * weight;		}				public function setAcceleration():void {			if (force < frictionStatic)			{				acceleration = 0;			}			else {				acceleration = (force - frictionMove) / weight;				//acceleration = 3;			}		}	}	}